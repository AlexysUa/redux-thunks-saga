{"version":3,"sources":["redux/types.js","redux/actions.js","components/Alert.js","components/PostForm.js","components/Post.js","components/Posts.js","components/loader.js","components/FetchedPosts.js","App.js","reportWebVitals.js","redux/appReducer.js","redux/postsReducer.js","redux/rootReducer.js","redux/sagas.js","index.js"],"names":["CREATE_POST","FETCH_POSTS","REQUEST_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","showAlert","text","type","payload","hideAlert","Alert","alert","className","role","PostForm","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","createPost","setState","asyncShowAlert","changeInputHandler","prev","target","name","value","this","onSubmit","htmlFor","onChange","React","Component","mapDispatchToProps","post","dispatch","setTimeout","connect","app","Post","syncPosts","posts","length","map","Loader","FetchedPosts","useDispatch","useSelector","fetchedPosts","loading","onClick","App","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","sagaWatcher","sagaWorker","takeEvery","put","delay","call","fetchPosts","a","fetch","response","json","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","run","render","document","getElementById"],"mappings":"kNAAaA,EAAc,mBACdC,EAAc,mBACdC,EAAgB,qBAChBC,EAAc,kBACdC,EAAc,kBACdC,EAAa,iBACbC,EAAa,iBCsBbC,EAAY,SAACC,GACxB,MAAO,CACLC,KAAMJ,EACNK,QAASF,IAIAG,EAAY,WACvB,MAAO,CACLF,KAAMH,I,OCnCGM,EAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACnB,mCACE,qBAAKC,UAAU,0BAA0BC,KAAK,QAA9C,SACGF,OCADG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,cAAgB,SAAAC,GACdA,EAAMC,iBADiB,IAGfC,EAAU,EAAKC,MAAfD,MAER,GAAIA,EAAME,OAAV,CAIA,IAAMC,EAAU,CACdH,QAAOI,GAAIC,KAAKC,MAAMC,YAExB,EAAKX,MAAMY,WAAWL,GACtB,EAAKM,SAAS,CAACT,MAAO,UAPpB,EAAKJ,MAAMc,kBAdI,EAwBlBC,mBAAqB,SAAAb,GACpB,EAAKW,UAAS,SAAAG,GAAI,kCAAQA,GAAR,eACfd,EAAMe,OAAOC,KAAOhB,EAAMe,OAAOE,YAvBpC,EAAKd,MAAQ,CACXD,MAAO,IAJQ,E,0CA8BnB,WAAU,IACDR,EAASwB,KAAKpB,MAAdJ,MACP,OACE,uBAAMyB,SAAUD,KAAKnB,cAArB,UACE,2CACA,sBAAKJ,UAAU,aAAf,UACE,uBAAOyB,QAAQ,QAAf,6FACA,uBACE9B,KAAK,OACLK,UAAU,eACVW,GAAG,QACHW,MAAOC,KAAKf,MAAMD,MAClBc,KAAK,QACLK,SAAUH,KAAKL,qBAElBnB,GAAS,cAAC,EAAD,CAAOA,MAAOA,OAExB,wBAAQC,UAAU,uBAAuBL,KAAK,SAA9C,+D,GAhDegC,IAAMC,WA4DvBC,EAAqB,CACzBd,WFzDwB,SAACe,GACzB,MAAO,CACLnC,KAAMT,EACNU,QAASkC,IEuDXrC,YACAI,YACAoB,eF5B4B,WAC5B,OAAO,SAACc,GACNA,EAAStC,EAAU,qIACnBuC,YAAW,WACTD,EAASlC,OACT,QE0BSoC,eAbS,SAAAzB,GACtB,MAAO,CACLT,MAAOS,EAAM0B,IAAIzC,aAWmBoC,EAAzBI,CAA6C/B,GCtE/CiC,EAAO,SAAC,GAAY,IAAXL,EAAU,EAAVA,KACpB,OACE,qBAAK9B,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SAA4B8B,EAAKvB,aCe1B0B,eANS,SAAAzB,GACtB,MAAO,CACL4B,UAAW5B,EAAM6B,MAAMA,SAIa,KAAzBJ,EAjBD,SAAC,GAAiB,IAAhBG,EAAe,EAAfA,UACd,OAAIA,EAAUE,OAOPF,EAAUG,KAAI,SAAAT,GAAI,OAAI,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKnB,OALrD,mCACE,sHCNK6B,EAAS,kBACpB,qBAAKxC,UAAU,iBAAiBC,KAAK,SAArC,SACE,sBAAMD,UAAU,kBAAhB,2BCESyC,EAAe,WAC1B,IAAMV,EAAWW,cACXL,EAAQM,aAAY,SAAAnC,GAAK,OAAIA,EAAM6B,MAAMO,gBAG/C,OAFgBD,aAAY,SAAAnC,GAAK,OAAIA,EAAM0B,IAAIW,WAGtC,cAAC,EAAD,IAGLR,EAAMC,OAOHD,EAAME,KAAI,SAAAT,GAAI,OAAG,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKnB,OAN3C,wBACLX,UAAU,kBACV8C,QAAS,kBAAIf,ENiCV,CACLpC,KAAMP,KMpCC,qECXX,SAAS2D,IACP,OACE,sBAAK/C,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,QAGJ,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,6HACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,MAAf,UACA,mIACE,cAAC,EAAD,aAOK2B,UAAMqB,KAAKD,GCfXE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCLRQ,EAAe,CACnBb,SAAS,EACTpD,UAAW,MCFPiE,EAAe,CACnBrB,MAAO,GACPO,aAAc,ICAHe,EAAcC,YAAgB,CACzCvB,MDE0B,WAAmC,IAAlC7B,EAAiC,uDAAzBkD,EAAcG,EAAW,uCAC5D,OAAQA,EAAOlE,MACb,KAAKT,EACH,OAAO,2BACFsB,GADL,IAEE6B,MAAO7B,EAAM6B,MAAMyB,OAAO,CAACD,EAAOjE,YAEtC,KAAKT,EACH,OAAO,2BACFqB,GADL,IAEEoC,aAAciB,EAAOjE,UAEzB,QAAS,OAAOY,ICblB0B,IFCwB,WAAmC,IAAlC1B,EAAiC,uDAAzBkD,EAAcG,EAAW,uCAC1D,OAAQA,EAAOlE,MACb,KAAKN,EACH,OAAO,2BACFmB,GADL,IAEEqC,SAAS,IAEb,KAAKvD,EACH,OAAO,2BACFkB,GADL,IAEEqC,SAAS,IAEb,KAAKtD,EACH,OAAO,2BACFiB,GADL,IAEEf,UAAWoE,EAAOjE,UAEtB,KAAKJ,EACH,OAAO,2BACFgB,GADL,IAEEf,UAAW,OAEf,QAAS,OAAOe,M,4CGzBHuD,G,WAIPC,GAJH,SAAUD,IAAV,iEACL,OADK,SACCE,YAAU7E,EAAe4E,GAD1B,uCAIP,SAAUA,IAAV,uEACE,OADF,SACQE,YZQC,CACLvE,KAAMN,IYVV,OAEE,OAFF,SAEQ8E,YAAM,KAFd,OAGkB,OAHlB,SAGwBC,YAAKC,GAH7B,OAIE,OADMzE,EAHR,gBAIQsE,YAAI,CAAEvE,KAAMR,EAAaS,YAJjC,OAKE,OALF,UAKQsE,YZUC,CACLvE,KAAML,IYhBV,wC,SAQe+E,I,2EAAf,4BAAAC,EAAA,sEACyBC,MAAM,wDAD/B,cACQC,EADR,gBAEeA,EAASC,OAFxB,oF,sBCLA,IAAMC,EAAOC,cAEPC,EAAQC,YACZlB,EACAmB,YACEC,YAAgBC,IAAON,GACvBO,OAAOC,8BAAgCD,OAAOC,iCAIlDR,EAAKS,IAAIpB,GAET,IAAM7B,EACJ,cAAC,IAAD,CAAU0C,MAAOA,EAAjB,SACE,cAAC,EAAD,MAIJQ,iBACElD,EACAmD,SAASC,eAAe,SAM1BrC,M","file":"static/js/main.a793a115.chunk.js","sourcesContent":["export const CREATE_POST = \"POST/CREATE_POST\"\nexport const FETCH_POSTS = \"POST/FETCH_POSTS\"\nexport const REQUEST_POSTS = \"POST/REQUEST_POSTS\"\nexport const SHOW_LOADER = \"APP/SHOW_LOADER\"\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\"\nexport const SHOW_ALERT = \"APP/SHOW_ALERT\"\nexport const HIDE_ALERT = \"APP/HIDE_ALERT\"","import { \n  CREATE_POST, \n  FETCH_POSTS, \n  HIDE_ALERT, \n  HIDE_LOADER, \n  SHOW_ALERT, \n  SHOW_LOADER, \n  REQUEST_POSTS } from \"./types\"\n\nexport const createPost = (post) => {\n  return {\n    type: CREATE_POST,\n    payload: post\n  }\n }\n\nexport const showLoader = () => {\n  return {\n    type: SHOW_LOADER\n  }\n}\n\nexport const hideLoader = () => {\n  return {\n    type: HIDE_LOADER\n  }\n}\n\nexport const showAlert = (text) => {\n  return {\n    type: SHOW_ALERT,\n    payload: text\n  }\n}\n\nexport const hideAlert = () => {\n  return {\n    type: HIDE_ALERT,    \n  }\n}\n\nexport const asyncShowAlert = () => {\n  return (dispatch)=> {\n    dispatch(showAlert('Введите заголовок поста'))\n    setTimeout(()=>{\n      dispatch(hideAlert())\n    },2000)\n  }\n}\n\nexport const fetchPosts = () => {\n  return {\n    type: REQUEST_POSTS\n  }\n  // return async dispatch => {\n  //   try {\n  //     dispatch(showLoader());\n  //     const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=15');\n  //     if(response.ok) {\n  //       setTimeout(()=>{\n  //         dispatch(hideLoader());\n  //       },500)\n  //     }\n  //     const json = await response.json();\n  //     dispatch({ type: FETCH_POSTS, payload: json})\n  //   } catch(e) {\n  //     dispatch(showAlert('Что то пошло не так'))\n  //   }\n  // }\n}","import React from 'react';\n\nexport const Alert = ({alert}) => (\n  <>\n    <div className=\"alert alert-danger mt-3\" role=\"alert\">\n      {alert}\n    </div>\n  </>\n)","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createPost, showAlert, hideAlert, asyncShowAlert} from '../redux/actions'\nimport { Alert } from './Alert';\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: \"\",\n    }\n  }\n\n  submitHandler = event => {\n    event.preventDefault();\n\n    const { title } = this.state;\n\n    if(!title.trim()) {\n      this.props.asyncShowAlert();\n      return;\n    }\n    const newPost = {\n      title, id: Date.now().toString()\n    }    \n    this.props.createPost(newPost)        \n    this.setState({title: ''})\n  }\n\n   changeInputHandler = event => { \n    this.setState(prev=> ({...prev, ...{\n      [event.target.name]: event.target.value\n    }}))\n  }\n\n  render() {\n    const {alert} = this.props\n    return (\n      <form onSubmit={this.submitHandler}>\n        <h2>Post form</h2>                        \n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Загловок поста</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            id=\"title\" \n            value={this.state.title}\n            name=\"title\"\n            onChange={this.changeInputHandler}\n          />\n        {alert && <Alert alert={alert}/>}        \n        </div>\n        <button className=\"btn btn-success mt-3\" type=\"submit\">Создать</button>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    alert: state.app.showAlert\n  }\n}\n\nconst mapDispatchToProps = {\n  createPost,\n  showAlert,\n  hideAlert,\n  asyncShowAlert\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\n\nexport const Post = ({post}) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{post.title}</h5>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Post} from './Post'\n\nconst Posts = ({syncPosts}) => {\n  if(!syncPosts.length) {\n    return (\n      <>\n        <p>Постов пока нет</p>        \n      </>\n    )\n  }\n  return syncPosts.map(post => <Post post={post} key={post.id}/>)\n}\n\nconst mapStateToProps = state => {\n  return {\n    syncPosts: state.posts.posts\n  }\n}\n\nexport default connect(mapStateToProps, null)(Posts);","import React from 'react';\n\nexport const Loader = () => (\n  <div className=\"spinner-border\" role=\"status\">\n    <span className=\"visually-hidden\">Loading...</span>\n  </div>\n)","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {Post} from './Post';\nimport {fetchPosts} from '../redux/actions'\nimport { Loader } from './loader';\n\nexport const FetchedPosts = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.fetchedPosts);\n  const loading = useSelector(state => state.app.loading);\n  \n  if(loading) {\n    return <Loader />\n  }\n  \n  if(!posts.length) {\n    return <button \n      className=\"btn btn-primary\"\n      onClick={()=>dispatch(fetchPosts())}\n    >Загрузить\n    </button>\n  }\n  return posts.map(post=> <Post post={post} key={post.id}/>)\n}","import React from 'react';\nimport PostForm from './components/PostForm';\nimport Posts from './components/Posts';\nimport {FetchedPosts} from './components/FetchedPosts';\n\nfunction App() {\n  return (\n    <div className=\"container pt-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <PostForm />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Синхронные посты</h2>\n          <Posts />\n        </div>\n        <div className=\"col\">\n        <h2>Асинхронные посты</h2>\n          <FetchedPosts />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER } from \"./types\"\n\nconst initialState = {\n  loading: false,\n  showAlert: null,\n}\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return {\n        ...state,\n        loading: true\n      }      \n    case HIDE_LOADER:\n      return {\n        ...state,\n        loading: false\n      }\n    case SHOW_ALERT:\n      return {\n        ...state,\n        showAlert: action.payload\n      }\n    case HIDE_ALERT:\n      return {\n        ...state,\n        showAlert: null\n      }\n    default: return state      \n  }\n}","import { CREATE_POST, FETCH_POSTS } from \"./types\";\n\nconst initialState = {\n  posts: [],\n  fetchedPosts: [],\n}\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_POST:      \n      return {\n        ...state,\n        posts: state.posts.concat([action.payload])\n      }\n    case FETCH_POSTS:\n      return {\n        ...state,\n        fetchedPosts: action.payload\n      }\n    default: return state;\n  }  \n}","import { combineReducers } from \"redux\";\nimport { appReducer } from \"./appReducer\";\nimport { postsReducer } from \"./postsReducer\";\n\nexport const rootReducer = combineReducers({\n  posts: postsReducer,\n  app: appReducer\n})","import { call, put, takeEvery, delay } from 'redux-saga/effects';\nimport { hideLoader, showLoader } from './actions';\nimport { FETCH_POSTS, REQUEST_POSTS } from './types';\n\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_POSTS, sagaWorker)\n}\n\nfunction* sagaWorker() {\n  yield put(showLoader())\n  yield delay(1000);  \n  const payload = yield call(fetchPosts)  \n  yield put({ type: FETCH_POSTS, payload })\n  yield put(hideLoader())\n}\n\nasync function fetchPosts() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=15');     \n  return await response.json();\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { sagaWatcher } from './redux/sagas';\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk, saga),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nsaga.run(sagaWatcher);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nrender(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}